# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from "clif/testing/pyobject_ptr.h":
  namespace `clif_testing_pyobject_ptr`:
    def cpp_exceptions_enabled() -> bool

    class CppValueHolder:
      def __init__(self, value: int)
      value: int

    def return_pyobject_ptr() -> object
    def pass_pyobject_ptr(obj: object) -> bool

    def pass_pyobject_ptr_with_nullptr_default(obj: object = default) -> str

    def call_callback_with_pyobject_ptr_return(cb: (mode: CppValueHolder) -> object, mode: CppValueHolder) -> object
    def call_callback_with_pyobject_ptr_arg(cb: (obj: object) -> CppValueHolder, obj: object) -> CppValueHolder

    def call_callback_with_pyobject_ptr_int_args(cb: (obj: object, num: int) -> CppValueHolder, obj: object) -> CppValueHolder
    def call_callback_with_int_pyobject_ptr_args(cb: (num: int, obj: object) -> CppValueHolder, obj: object) -> CppValueHolder
