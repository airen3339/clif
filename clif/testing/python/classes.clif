# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from "clif/testing/classes.h":
  namespace `clif_testing::classes`:
    class `K` as Klass:
      def __init__(self, i: int)
      const C: int
      @classmethod
      def `getCplus2` as C2(cls) -> int
      def `i1` as Int1(self) -> int
      i: int = property(`get`, `set`)
      i2: int = property(`get2`)

    class Derived(Klass):
      """This class also has a docstring.

      It spans multiple lines.  Plus trailing whitespace.

      None of that should be a problem for the code generator that shoves
      this text into the tp_doc char* slot C string in the generated code.

      """
      j: int
      @add__init__
      def Init(self, i: int, j: int)
      def `has` as __contains__(self, k: int) -> bool

    class AddInit:
      i: int
      @add__init__
      def Init(self, other: AddInit)

    class OverloadedGetterProperty:
      def __init__(self, i: int)
      x: int = property(`i`)
