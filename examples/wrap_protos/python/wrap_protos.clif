# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Imports the CLIF-generated C++ headers for the protobuf types. This import is
# required for CLIF to compile the `from` block below.
from "wrap_protos/protos/sample_pyclif.h" import *

# Imports the Python-generated library for the protobuf types. This import is
# not strictly required, but it improves PyType specificity, and it ensures that
# the Python proto library is available to callers who do not directly import
# the type.
from clif.examples.wrap_protos.protos.sample_pb2 import MyMessage

from "wrap_protos/wrap_protos.h":
  namespace `clif_example::wrap_protos`:
    class ProtoManager:
      def GetMyMessage(self) -> MyMessage

    def DefaultInitMyMessage(s: MyMessage)

    # Nested proto messages should be specified using the '.' notation.
    def MakeMyMessageFromNested(n: MyMessage.Nested) -> MyMessage
    def MakeMyMessageFromNestedEnum(e: MyMessage.Nested.NestedEnum) -> MyMessage
